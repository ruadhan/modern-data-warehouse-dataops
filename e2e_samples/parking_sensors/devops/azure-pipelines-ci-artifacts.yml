trigger:
  branches:
    include:
      - main
      - release/*
  paths:
    include:
      - e2e_samples/parking_sensors/*

pr: none

variables:
  basePath: "e2e_samples/parking_sensors"
  pythonWorkingDir: "$(basePath)/src/ddo_transform"
  pythonPackageMajorVersion: 1
  pythonPackageMinorVersion: 1
  pythonPackagePatchVersion: $(Build.BuildId)
  sqlDwPath: "$(basePath)/sql/ddo_azuresqldw_dw"
  sqlDwSolutionName: "ddo_azuresqldw_dw"
  sqlDwSolution: "$(sqlDwPath)/$(sqlDwSolutionName).sln"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"

stages:
  - stage: "publish_artifacts"
    displayName: "Publish Build Artifacts"
    jobs:
      - job: "publish_python_packages"
        displayName: "Publish Python Packages"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.6"
              architecture: "x64"

          - script: pip install -r requirements_dev.txt && pip install -r requirements.txt
            workingDirectory: $(pythonWorkingDir)
            displayName: "Install requirements"

          - script: make dist
            env:
              PACKAGE_VERSION: $(pythonPackageMajorVersion).$(pythonPackageMinorVersion).$(pythonPackagePatchVersion)
            workingDirectory: $(pythonWorkingDir)
            displayName: "Create wheel package"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(pythonWorkingDir)/dist"
              ArtifactName: "dist"
            displayName: "Publish Dist Artifacts"

      - job: "publish_static_artifacts"
        displayName: "Publish Static Artifacts"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(basePath)/databricks"
              ArtifactName: "databricks"
            displayName: "Publish Databricks Artifacts"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(basePath)/adf/_scripts/deploymentadf.ps1"
              ArtifactName: "adf_scripts"
            displayName: "Publish ADF Scripts"

      - job: "publish_sql_packages"
        displayName: "Publish SQL Packages"
        pool:
          vmImage: "windows-latest"
        steps:
          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: "$(sqlDwSolution)"

          - task: VSBuild@1
            inputs:
              solution: "$(sqlDwSolution)"
              platform: "$(buildPlatform)"
              configuration: "$(buildConfiguration)"
          - task: VSTest@2
            inputs:
              platform: "$(buildPlatform)"
              configuration: "$(buildConfiguration)"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(sqlDwPath)/$(sqlDwSolutionName)/bin/$(buildConfiguration)/ddo_azuresqldw_dw.dacpac"
              ArtifactName: "sql_dw_dacpac"
            displayName: "Publish SQL DACPAC"

      - job: "publish_adf_arm_template"
        displayName: "Publish ADF ARM Template"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "14.x"
            displayName: "Install Node.js"

          - task: Npm@1
            inputs:
              command: "install"
              workingDir: "$(Build.Repository.LocalPath)/$(basePath)/adf"
              verbose: true
            displayName: "Install npm package"

          - task: Npm@1
            inputs:
              command: "custom"
              workingDir: "$(Build.Repository.LocalPath)/$(basePath)/adf"
              customCommand: "run build validate $(Build.Repository.LocalPath)/$(basePath)/adf /14c6efd9-f07b-456b-8f81-92b283b1bb9b/resourceGroups/mdwdops-l0cce-dev-rg/providers/Microsoft.DataFactory/factories/mdwdops-adf-dev-l0cce"
            displayName: "Validate"

          - task: Npm@1
            inputs:
              command: "custom"
              workingDir: "$(Build.Repository.LocalPath)/$(basePath)/adf"
              customCommand: 'run build export $(Build.Repository.LocalPath)/$(basePath)/adf /14c6efd9-f07b-456b-8f81-92b283b1bb9b/resourceGroups/mdwdops-l0cce-dev-rg/providers/Microsoft.DataFactory/factories/mdwdops-adf-dev-l0cce "ArmTemplate"'
            displayName: "Validate and Generate ARM template"

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Build.Repository.LocalPath)/$(basePath)/adf/ArmTemplate"
              artifact: "ArmTemplates"
              publishLocation: "pipeline"
